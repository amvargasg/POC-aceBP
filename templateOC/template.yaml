apiVersion: v1
kind: Template
metadata:
  name: poc-acebp-template
  annotations:
    openshift.io/display-name: poc-acebp Template
    description: Creates a DC for poc-acebp - a stateless container.
    tags: poc-acebp-app
objects:
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: "${deploymentName}"
    name: ${deploymentName}-route
  spec:
    host: ${deploymentName}-${release}.com
    port:
      targetPort: ace-http
    to:
      kind: Service
      name: ${deploymentName}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: "${deploymentName}"
      release: "${release}"
      buildNumber: "${buildNumber}"
    name: ${deploymentName}
  spec:
    ports:
    - port: 7600
      targetPort: 7600
      protocol: TCP
      name: webui
    - port: 7800
      targetPort: 7800
      protocol: TCP
      name: ace-http
    - port: 7843
      targetPort: 7843
      protocol: TCP
      name: ace-https
    selector:
      app: "${deploymentName}"
      release: "${release}"
  #apiVersion: extensions/v1beta1
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${deploymentName}
    labels:
      deployment: "${deploymentName}"
      app: "${deploymentName}"
      release: "${release}"
      buildNumber: "${buildNumber}"
    annotations:
      appconnectenterprise: 'prod'
      serverName: ${deploymentName}
  spec:
    strategy:
      rollingUpdate:
        maxUnavailable: 1
        maxSurge: 1
    replicas: 1
    template:
      metadata:
        annotations:
          productName: ${product_name}
          productID: ${product_id}
          productVersion: ${product_version}
  
        name: ${deploymentName} 
        labels:
          app: ${deploymentName}
          release: ${release}
          buildNumber: ${buildNumber}
      spec:
  #      serviceAccountName: NEED TO CHECK IF Service Account is required.
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          
          
        containers:
          - name: poc-acebp
            image: ${docker_registry_url}/${imageURI}
#            imagePullPolicy: Always
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 7600
                name: webui
              - containerPort: 7800
                name: ace-http
              - containerPort: 7843
                name: ace-https
            env:
              - name: LICENSE
                value: "accept"
              - name: USE_QMGR
                value: "false"
              - name: ACE_SERVER_NAME
                value:  poc-acebp-${deploymentName}"
              - name: SERVICE_NAME
                value: "${deploymentName}"
              - name: LOG_FORMAT
                value: "${logFormat}" 
              - name: ACE_ENABLE_METRICS
                value: "${isMetricEnable}"
              - name: "ACE_KEYSTORE_PASSWORD"
                valueFrom:
                   secretKeyRef:
                     name: "${secretName}"  
                     optional: true
                     key: keystorePassword
              - name: "ACE_TRUSTSTORE_PASSWORD"
                valueFrom:
                   secretKeyRef:
                     name: "${secretName}"
                     optional: true
                     key: truststorePassword
              - name: env_to_deploy
                value: "${release}"
              - name: "client_api_auth_username"
                valueFrom:
                   secretKeyRef:
                     name: ${clientApiAuthSecretName}
                     optional: true
                     key: auth_username
              - name: "client_api_auth_password"
                valueFrom:
                   secretKeyRef:
                     name: ${clientApiAuthSecretName}
                     optional: true
                     key: auth_password
            volumeMounts:
              - name: jksclientstore
                mountPath: "/home/aceuser/build/keystores"                    
            
            # Set liveness probe to determine if the Integration Server is running
            livenessProbe:
              exec:
                command:
                - chkacehealthy
              initialDelaySeconds: 180
              periodSeconds: 10
              timeoutSeconds: 5
              failureThreshold: 1
            # Set readiness probe to determine if the Integration Server admin endpoint is running
            readinessProbe:
              exec:
                command:
                - chkaceready
              initialDelaySeconds: 10
              periodSeconds: 5
              timeoutSeconds: 3
              failureThreshold: 1
            resources:
              limits: 
                cpu: "200m"
                memory: 500Mi 
              requests:
                cpu: "150m"
                memory: 350Mi
        volumes:
          - name: jksclientstore
            secret:
              secretName: ${jkskeystore}
              optional: true
parameters:          
- description: Deployment Application Name 
  displayName: Deployment Application Name
  name: deploymentName
  value: poc-acebp
  required: true
- description: Release Cycle - SIT, UAT or Production
  displayName: Release Cycle(sit/uat/prod)
  name: release
- description: Build Number at which the deployment happens
  displayName: Build Number 
  name: buildNumber
  required: true
- description: IBM App Connect Enterprise Docker Registry 
  displayName: Docker Registry 
  name: docker_registry_url
  #value: "image-registry.openshift-image-registry.svc:5000"
- description: IBM App Connect Enterprise Image URL - complete URL
  displayName: Image URL for poc-a 
  name: imageURI
  required: true
- description: Client Auth Credential - user name and password
  displayName: Client Auth Credential 
  name: clientApiAuthSecretName
  value: "na"
- description: JKS Key store for client certificate
  displayName: JKS Key store for client certificate 
  name: jkskeystore
  value: "na" 
- description: Is Metrics enabled
  displayName: Is Metric enabled? 
  name: isMetricEnable
  value: "false"
- description: settings for MQ error logs and integration server console logs
  displayName: Log Format 
  name: logFormat
  value: "basic"
- description: Secret Name containing password for KEYSTOR and TRUSTSTORE containing keystorePassword and truststorePassword
  displayName: Keystore and Truststore secret Name 
  name: secretName
  value: "na" 
#- description: IBM App Connect Enterprise (Non-production) (Chargeable)
#  displayName: IBM CP4I Product Name 
#  name: product_name
#  value: "IBM App Connect Enterprise (Non-production) (Chargeable)"
#- description: IBM App Connect Enterprise Product ID
#  displayName: IBM App Connect Enterprise Product ID
#  name: product_id
  #value: "IBMAppConnectEnterprise_30fd0181a948441ebe3be59192171987_nonProd_chargeable"
- description: IBM App Connect Enterprise Product Version
  displayName: IBM App Connect Enterprise Product Version
  name: product_version
  value: "12.0.0.8"